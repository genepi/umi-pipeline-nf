nextflow_process {

    name "Test Process PARSE_BED"
    script "modules/local/parse_bed.nf"
    process "PARSE_BED"

    test("Should run without failures") {

        when {
            process {
                """
                input[0] = Channel.fromPath( file("$baseDir/tests/input/parse_bed/lpa-ref2645.bed", checkIfExists: true) )
                    .splitText()
                    .map { line ->
                        def fields = line.tokenize('\t')
                        def target = fields[3].trim()
                        return tuple(target, line)
                    }
                
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

    test("Should split bed into two files") {

        when {
            process {
                """
                input[0] = Channel.fromPath( file("$baseDir/tests/input/parse_bed/lpa-refcombined.bed", checkIfExists: true) )
                    .splitText()
                    .map { line ->
                        def fields = line.tokenize('\t')
                        def target = fields[3].trim()
                        return tuple(target, line)
                    }
                
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

}
